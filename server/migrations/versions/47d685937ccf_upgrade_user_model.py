"""upgrade user model

Revision ID: 47d685937ccf
Revises: 8305da34a612
Create Date: 2025-07-14 18:36:33.144224

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "47d685937ccf"
down_revision: Union[str, Sequence[str], None] = "8305da34a612"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("username", sa.String(), nullable=False))
    op.add_column("users", sa.Column("password_hash", sa.String(), nullable=False))
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.create_unique_constraint(None, "users", ["password_hash"])
    op.create_unique_constraint(None, "users", ["username"])
    op.drop_column("users", "email")
    op.drop_column("users", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "users", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=False)
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.drop_column("users", "password_hash")
    op.drop_column("users", "username")
    # ### end Alembic commands ###
