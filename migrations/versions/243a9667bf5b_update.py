"""update

Revision ID: 243a9667bf5b
Revises: 08de936cf253
Create Date: 2025-08-25 17:47:51.902651

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '243a9667bf5b'
down_revision: Union[str, Sequence[str], None] = '08de936cf253'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('comments', 'author_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_comments_product_id'), 'comments', ['product_id'], unique=False)
    op.drop_constraint(op.f('comments_author_id_fkey'), 'comments', type_='foreignkey')
    op.drop_constraint(op.f('comments_product_id_fkey'), 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'comments', 'users', ['author_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key(op.f('comments_product_id_fkey'), 'comments', 'products', ['product_id'], ['id'])
    op.create_foreign_key(op.f('comments_author_id_fkey'), 'comments', 'users', ['author_id'], ['id'])
    op.drop_index(op.f('ix_comments_product_id'), table_name='comments')
    op.alter_column('comments', 'author_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
